version: '2'
services:
  rcgech:
    image: registry.hortis.ch:8119/geneva_horodateur_rcgech:1.1.0
    environment:
      - WS_URI=...
      - PRIVATE_KEY=...
      - DB_DSN=host=postgres user=... dbname=... sslmode=disable password=...
      - LOCKED_ADDR=...
      - ERROR_THRESHOLD=0.1
      - WARNING_THRESHOLD=1
    dns:
      - 8.8.8.8
    links:
      - postgres
    networks:
      - database
      - backend

  webapp:
    image: registry.hortis.ch:8119/geneva_horodateur_webapp:1.1.0
    environment:
      - KEY_NAME=saml # The .cert and .key must have the same name
      - IDP_METADATA=... #Public URL where IdP can be found
      - SP_URL=https://local.etat-ge.ch/blockstamp-horodateur # URL of the service provider
      - API_HOST=rcgech:8090 # API host, is equal to the <api container name>:<port>
      - MAIN_URI=blockstamp-horodateur # URI used as a prefix in the webapp
      - VIRTUAL_HOST=local.etat-ge.ch
      - HTTPS_METHOD=noredirect
      - CSRF_TIME_LIMIT=360
    working_dir: /app
    command: /app/webapp
    dns:
      - 8.8.8.8
    volumes:
      - ./SwissSignGoldCA-G2.crt:/etc/ssl/certs/SwissSignGoldCA-G2.crt:ro
      - "./local.etat-ge.ch.cer:/app/saml.cert:ro"
      - "./local.etat-ge.ch.key:/app/saml.key:ro"
    networks:
      - frontend
      - backend

  postgres:
    image: postgres:9.5
    user: postgres
    environment:
      - POSTGRES_USER=...
      - POSTGRES_PASSWORD=...
      - POSTGRES_DB=...
    networks:
      - database

  nginx-proxy:
    image: blockchainpartnerhub/geneva_nginx_proxy:1.0
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - "./local.etat-ge.ch.cer:/etc/nginx/certs/local.etat-ge.ch.crt:ro" # Edit path to the right certs folder, name should be example.com.crt and example.com.key
      - "./local.etat-ge.ch.key:/etc/nginx/certs/local.etat-ge.ch.key:ro" # Edit path to the right certs folder, name should be example.com.crt and example.com.key
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
    networks:
      - frontend

networks:
  frontend:
  backend:
  database:

# Add these env vars to services that need to be reached from the Internet
# VIRTUAL_HOST=example.com ; LETSENCRYPT_HOST=example.com ; LETSENCRYPT_EMAIL= foo@example.com
